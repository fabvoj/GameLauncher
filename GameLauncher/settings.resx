<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        //w=
</value>
  </data>
</root>